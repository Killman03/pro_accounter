#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—è payment_date –∏–∑ —Ç–∞–±–ª–∏—Ü—ã coffee_machines
"""

import asyncio
import asyncpg
from config import DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_NAME

async def run_migration():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—è payment_date"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = await asyncpg.connect(
        host=DB_HOST,
        port=DB_PORT,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME
    )
    
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã coffee_machines...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª–µ payment_date
        columns = await conn.fetch("""
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'coffee_machines' AND column_name = 'payment_date'
        """)
        
        if columns:
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ payment_date: {columns[0]}")
            print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ payment_date...")
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ
            await conn.execute("ALTER TABLE coffee_machines DROP COLUMN payment_date")
            print("‚úÖ –ü–æ–ª–µ payment_date —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!")
        else:
            print("‚ÑπÔ∏è  –ü–æ–ª–µ payment_date –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (—É–∂–µ —É–¥–∞–ª–µ–Ω–æ)")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìä –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã coffee_machines:")
        new_columns = await conn.fetch("""
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'coffee_machines'
            ORDER BY ordinal_position
        """)
        
        for col in new_columns:
            print(f"  - {col['column_name']}: {col['data_type']} ({'NULL' if col['is_nullable'] == 'YES' else 'NOT NULL'})")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise
    finally:
        await conn.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—è payment_date")
    print("=" * 50)
    
    asyncio.run(run_migration())
    
    print("\n" + "=" * 50)
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞") 